### 📁 파일 요약: `scripts/classify.py`

#### 역할
`classify.py`는 Git 저장소의 변경 사항을 다양한 플랫폼과 용도에 맞게 메시지를 분류하고 생성하는 역할을 합니다. 이 파일은 자동화된 Git 작업 흐름에서 중요한 부분으로, 알림 메시지, 기록 메시지, 그리고 Git 커밋 메시지를 생성하는 데 사용됩니다.

#### 주요 기능
1. **알림 메시지 생성 (`classify_for_notify` 함수)**
   - 다양한 알림 플랫폼(Discord, Slack, Gmail 등)으로 전송할 메시지를 생성합니다.
   - 생성되는 메시지 유형:
     - 전체 레포 요약
     - 청크별 커밋 메시지
     - 최종 커밋 메시지
     - Git Push 상태
     - LLM 사용 비용 요약

2. **기록 메시지 생성 (`classify_for_record` 함수)**
   - 기록용으로 남길 메시지를 생성합니다.
   - 생성되는 메시지 유형:
     - 전체 맥락 요약
     - 청크 전체 요약본
     - 문서 작성 기록 메시지

3. **Git 커밋 메시지 생성 (`classify_for_git` 함수)**
   - Git에 기록할 최종 커밋 메시지를 생성합니다.

#### 로직 분석
1. **`classify_for_notify` 함수**
   - 입력된 데이터를 기반으로 알림 플랫폼에 전송할 5개의 메시지를 생성합니다.
   - 각 메시지는 특정 형식에 맞춰 포맷팅되어 반환됩니다.

2. **`classify_for_record` 함수**
   - 기록용 메시지를 생성하며, 전체 맥락 요약, 청크 요약, 문서 작성 기록을 포함합니다.
   - 생성된 메시지는 기록 또는 문서화에 사용됩니다.

3. **`classify_for_git` 함수**
   - 최종 커밋 메시지를 생성하여 Git에 기록할 수 있도록 합니다.

#### 논리 흐름
1. 입력 데이터(`chunk_msgs`, `final_msg`, `repo_context`, `status`, `cost_summary_msg`)를 받아 각 함수에 맞게 처리합니다.
2. 각 함수는 특정 형식에 맞춰 메시지를 생성하고 반환합니다.
3. 생성된 메시지는 외부 스크립트(`run_all.py` 등)와 통합되어 사용됩니다.

#### Repo 내에서의 역할
- `classify.py`는 `run_all.py`와 같은 상위 스크립트에서 호출되어 사용됩니다.
- 생성된 메시지는 다양한 알림 플랫폼으로 전송되거나, 기록으로 남겨집니다.

### 코드 개선 제안
1. **메시지 형식의 유연성**
   - 현재는 하드코딩된 형식으로 메시지가 생성됩니다. 향후 다양한 형식의 메시지를 지원할 수 있도록 유연성을 추가할 수 있습니다.

2. **외부 라이브러리 통합**
   - 알림 플랫폼과의 통합을 더욱 강화하기 위해 각 플랫폼의 API를 직접 활용하는 로직을 추가할 수 있습니다.

3. **테스트 코드 추가**
   - 각 함수의 출력이 예상대로 생성되는지 확인하기 위한 테스트 코드를 추가하는 것이 좋습니다.

### 기술 문서화 제안
```markdown
## classify.py

### 개요
다양한 용도에 맞게 메시지를 생성하고 분류하는 모듈입니다.

### 주요 함수

#### 1. `classify_for_notify`
알림 플랫폼 전송용 메시지를 생성합니다.

#### 2. `classify_for_record`
기록용 메시지를 생성합니다.

#### 3. `classify_for_git`
Git 커밋 메시지를 생성합니다.

### 사용 예시
```python
from classify import classify_for_notify

messages = classify_for_notify(chunk_msgs, final_msg, repo_context, status, cost_summary_msg)
for message in messages:
    print(message)
```
```