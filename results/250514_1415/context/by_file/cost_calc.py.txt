### 📁 파일 분석: `scripts/cost_calc.py`

#### 🔍 역할 요약
`cost_calc.py` 파일은 LLM(Large Language Model) 사용 비용을 계산하는 모듈입니다. 이 파일은 Git 저장소(`git_auto_v2`) 내에서 LLM 호출에 따른 토큰 사용량과 비용을 기록하고 엑셀 파일에 누적 저장하는 역할을 수행합니다.

#### 📂 주요 기능
1. **환율 정보 처리**
   - 네이버 금융에서 USD/KRW 환율을 크롤링하여 캐싱합니다.
   - 캐시 파일이 존재하고 24시간 이내에 수정된 경우, 새로 크롤링하지 않고 캐시된 값을 사용합니다.

2. **토큰 계산**
   - 입력 및 출력 텍스트의 토큰 수를 계산합니다.
   - `tiktoken` 라이브러리를 사용하여 모델에 맞는 인코딩으로 토큰을 계산합니다.

3. **비용 계산**
   - LLM 호출에 사용된 프롬프트와 응답의 토큰 수를 기반으로 비용을 계산합니다.
   - 모델별 입력/출력 토큰당 비용은 `config/cost.json` 파일에서 로드합니다.
   - USD로 계산된 비용을 환율을 통해 KRW로 변환합니다.

4. **엑셀 저장**
   - 계산된 비용 데이터를 Pandas DataFrame으로 구성하여 엑셀 파일(`cost/git_cost.xlsx`)에 누적 저장합니다.
   - 기존 파일이 존재하면 데이터를 추가하고, 없으면 새로 생성합니다.

#### 💡 주요 로직
1. **`get_usd_exchange_rate` 함수**
   - 환율 정보를 네이버 금융에서 크롤링하여 캐싱합니다.
   - 예외 발생 시 기본값(`1400.0`)을 반환합니다.

2. **`count_tokens` 함수**
   - 입력 텍스트의 토큰 수를 계산합니다.
   - 모델에 맞는 인코딩을 사용하며, 실패 시 기본 인코딩(`cl100k_base`)을 사용합니다.

3. **`calculate_llm_costs` 함수**
   - LLM 호출에 따른 비용을 계산합니다.
   - 다양한 소스 파일(`context_by_file`, `diff_chunks` 등)에서 텍스트를 읽어 토큰 수를 계산하고 비용을 산출합니다.
   - 계산된 비용 데이터를 엑셀 파일에 저장합니다.

#### 🔗 의존성
- `utils.path`: `get_cost_log_path`, `get_result_paths` 함수 사용.
- `config/cost.json`: 모델별 비용 설정 파일.
- `tiktoken`: 토큰 계산에 사용.
- `pandas`, `openpyxl`: 데이터 처리 및 엑셀 파일 조작에 사용.

#### 📝 요약
`cost_calc.py`는 LLM 사용 비용을 체계적으로 계산하고 기록하는 역할을 합니다. 환율 정보 캐싱, 토큰 계산, 비용 산출 및 엑셀 저장을 통해 비용 관리를 자동화합니다. 이 파일은 `git_auto_v2` 저장소 내에서 비용 추적 및 분석에 중요한 역할을 수행합니다.