### Git Repo 분석: git_auto_v2

#### 개요
`git_auto_v2` 레포지토리는 VSCode가 종료될 때 자동으로 특정 작업을 수행하는 것을 목표로 합니다. 주요 기능은 Git 저장소에서 변경 사항을 감지하고, 자동으로 커밋 메시지를 생성하며, 관련 작업을 수행하는 것입니다.

#### 폴더 구조 및 주요 파일 분석

1. **`check_err.py` 및 하위 파일들**
   - `check_err.py`는 오류를 확인하는 스크립트로 보입니다.
   - 하위 파일들은 다양한 외부 서비스와의 통합을 위한 스크립트들로 구성되어 있습니다.
     - `gpt-4o.py`, `llama4-maverick-instruct-basic.py`: AI 모델과의 인터랙션을 위한 파일들.
     - `discord.py`, `gmail.py`, `kakao.py`, `slack.py`, `notion.py`: 각각 Discord, Gmail, Kakao, Slack, Notion과의 통합을 위한 파일들.
     - `google_drive.py`, `slack.py`: 아직 구현되지 않은 파일들 (`Pending composition`).

2. **`run_all.py` 및 하위 파일들**
   - `run_all.py`는 주요 작업을 실행하는 메인 스크립트입니다.
   - 하위 파일들은 다양한 기능을 수행하는 모듈들로 구성되어 있습니다.
     - `auto_git.sh`: VSCode 종료 시 자동으로 실행되는 Bash 스크립트.
     - `classify.py`, `commit.py`, `context.py`, `cost_calc.py`, `diff.py`, `llm_router.py`, `upload.py`, `path.py`: 각각 분류, 커밋, 컨텍스트 처리, 비용 계산, 차이점 분석, LLM 라우팅, 업로드, 경로 처리와 관련된 모듈들.

#### 주요 로직 분석

1. **`auto_git.sh` 스크립트**
   - 이 스크립트는 VSCode가 종료될 때 자동으로 실행됩니다.
   - 주요 로직:
     1. VSCode의 마지막 작업 디렉토리를 `storage.json` 파일에서 가져옵니다.
     2. 해당 디렉토리가 Git 저장소인지 확인합니다.
     3. 원격 저장소의 이름과 로컬 저장소의 이름이 일치하는지 확인합니다.
     4. 조건이 만족되면 `run_all.py`를 실행합니다.

2. **`run_all.py` 및 관련 모듈들**
   - `run_all.py`는 자동화 작업의 메인 진입점입니다.
   - 주요 기능:
     - 변경 사항 감지 및 커밋 메시지 생성.
     - AI 모델을 활용한 작업 수행 (`llm_router.py`).
     - 외부 서비스와의 통합을 통한 알림 또는 데이터 처리 (`discord.py`, `gmail.py` 등).

#### 논리 및 역할 요약

1. **`git_auto_v2` 레포의 주요 역할**
   - VSCode 종료 시 자동으로 Git 저장소를 감지하고 작업을 수행합니다.
   - AI 모델을 활용하여 커밋 메시지를 생성하거나 다른 작업을 자동화합니다.
   - 다양한 외부 서비스와 통합하여 알림 또는 추가 작업을 수행합니다.

2. **로직 흐름**
   1. VSCode 종료 감지 (`auto_git.sh`).
   2. 마지막 작업 디렉토리가 Git 저장소인지 확인.
   3. 원격 저장소 이름과 로컬 저장소 이름 일치 여부 확인.
   4. `run_all.py` 실행하여 주요 작업 수행.
   5. 변경 사항 감지, 커밋 메시지 생성, 외부 서비스와의 통합 작업 수행.

#### 기술 문서화를 위한 요약

```markdown
# git_auto_v2 프로젝트 개요

## 주요 기능
1. VSCode 종료 시 자동 실행.
2. Git 저장소 감지 및 작업 수행.
3. AI 모델을 활용한 커밋 메시지 생성 및 기타 작업 자동화.
4. 외부 서비스(Discord, Gmail, Kakao, Slack, Notion 등)와의 통합.

## 주요 파일 및 역할
- `auto_git.sh`: VSCode 종료 시 실행되는 Bash 스크립트.
- `run_all.py`: 주요 작업을 수행하는 메인 스크립트.
- `check_err.py`: 오류 확인 스크립트.
- 다양한 외부 서비스 통합 파일들 (`discord.py`, `gmail.py` 등).

## 로직 흐름
1. VSCode 종료 감지.
2. Git 저장소 확인 및 조건 검사.
3. `run_all.py` 실행.
4. 변경 사항 감지 및 자동화 작업 수행.
```

이 요약은 프로젝트의 구조와 주요 기능을 이해하는 데 도움이 되며, 향후 유지보수 및 개발에 유용한 참고 자료로 활용될 수 있습니다.