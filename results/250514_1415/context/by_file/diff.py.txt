### 📄 파일 요약: `scripts/diff.py`

#### **1. 파일 역할**
`scripts/diff.py`는 Git 저장소의 변경 사항을 분석하고, 이를 구조화된 청크로 나누어 저장하는 역할을 합니다. 이 파일은 `git diff` 명령어를 통해 현재 작업 디렉토리의 변경 내역을 추출하고, 이를 함수 단위 또는 고정 길이로 분할하여 파일로 저장합니다.

#### **2. 주요 기능**
1. **`get_git_diff(log=None)`**
   - **기능**: `git diff` 명령어를 실행하여 현재 스테이징되지 않은 변경 사항을 텍스트로 추출합니다.
   - **입력**: `log`: 로그를 출력할 함수 (선택 사항)
   - **출력**: `git diff` 결과 텍스트 (`str`)
   - **로직**:
     1. `subprocess.run`을 사용하여 `git diff` 명령어 실행.
     2. 결과 텍스트를 추출하고, 변경 사항이 없으면 `ValueError` 발생.
     3. 로그가 제공되면 진행 상황 기록.

2. **`split_diff_by_function(diff_text: str, timestamp: str, log=None, max_line_threshold: int = 200, block_size: int = 3)`**
   - **기능**: `git diff` 결과를 함수 단위 또는 고정 길이 청크로 나누고, 이를 파일로 저장합니다.
   - **입력**:
     - `diff_text`: `git diff` 결과 텍스트.
     - `timestamp`: 타임스탬프 (저장 경로 생성을 위해 사용).
     - `log`: 로그 출력 함수 (선택 사항).
     - `max_line_threshold`: 전체 diff가 짧을 때 단일 청크로 처리하기 위한 최대 라인 수 (기본값: 200).
     - `block_size`: `@@` 블록을 묶는 단위 (기본값: 3).
   - **출력**: 청크 텍스트 리스트 (`list[str]`)
   - **로직**:
     1. 전체 라인 수가 `max_line_threshold` 이하인 경우 단일 청크로 처리.
     2. `@@`로 시작하는 라인을 기준으로 블록을 식별:
        - `@@` 블록이 있으면 이를 기준으로 `block_size`만큼 묶어서 청크 생성.
        - `@@` 블록이 없으면 고정 길이(`max_line_threshold`)로 분할.
     3. 각 청크를 파일로 저장 (`diff_chunks` 디렉토리에 `chunk_{i}.txt` 형식으로 저장).

#### **3. 주요 로직 분석**
1. **`git diff` 처리**:
   - `subprocess.run`을 통해 `git diff`를 실행하고 결과를 텍스트로 추출.
   - 변경 사항이 없으면 예외 발생.

2. **청크 분할**:
   - `@@` 블록을 기준으로 분할하거나, 없으면 고정 길이로 분할.
   - 분할된 청크는 파일로 저장되어 이후 작업에 활용 가능.

3. **로그 및 예외 처리**:
   - 로그 함수가 제공되면 진행 상황 및 오류 메시지 기록.
   - 변경 사항이 없는 경우 `ValueError`를 발생시켜 호출자에게 알림.

#### **4. Repo 내 역할**
- `scripts/diff.py`는 자동화된 Git 작업 파이프라인의 일부로 사용됩니다.
- `git diff` 결과를 구조화하여 이후 LLM(대규모 언어 모델) 또는 기타 분석 작업에 필요한 입력으로 제공합니다.
- `run_all.py` 또는 `commit.py`와 같은 다른 스크립트에서 호출되어 변경 사항을 분석하고 처리하는 데 기여합니다.

#### **5. 개선점 및 확장 가능성**
1. **확장성**:
   - 현재는 `git diff` 결과를 파일로 저장하지만, 데이터베이스에 저장하거나 API로 전송하는 방식으로 확장 가능.
   - 다양한 분할 전략 (예: 의미 기반 분할)을 추가하여 유연성을 높일 수 있음.

2. **에러 처리 강화**:
   - 현재는 변경 사항이 없는 경우에만 예외 처리가 이루어짐. 추가적으로 `git diff` 실행 중 발생할 수 있는 기타 오류 (예: Git 환경 오류) 처리 강화 필요.

3. **설정 파일 도입**:
   - `max_line_threshold` 및 `block_size`와 같은 파라미터를 코드에 하드코딩하지 않고 설정 파일로 분리하면 유연성을 높일 수 있음.

#### **6. 요약**
`scripts/diff.py`는 `git diff` 결과를 추출하고 이를 구조화된 청크로 나누어 저장하는 역할을 합니다. 주요 기능은 `git diff` 실행 및 결과 분할이며, 자동화된 Git 작업 흐름에서 중요한 중간 단계로 사용됩니다. 향후 확장성을 고려하여 설정을 외부화하거나 추가적인 에러 처리 로직을 도입할 수 있습니다.