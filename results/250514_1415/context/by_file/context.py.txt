### 📁 scripts/context.py 파일 요약

#### 파일 역할
`scripts/context.py` 파일은 Git 레포지토리의 전체 맥락을 분석하고 요약하는 역할을 합니다. 이 파일은 레포지토리의 구조, 파일 내용, README 내용을 기반으로 각 파일의 역할과 전체 레포지토리의 맥락을 이해하고 요약합니다.

#### 주요 로직
1. **유효 파일 필터링**: `.py`와 `.sh` 확장자를 가진 파일을 유효 파일로 간주하며, 숨김 파일은 제외합니다.
2. **폴더 구조 생성**: 유효 파일들의 경로를 트리 구조로 나타내며, 파일 상태(예: 비어 있거나 읽을 수 없는 파일)를 표시합니다.
3. **README 내용 읽기**: `README.md` 파일의 내용을 읽어 레포지토리의 설명을 가져옵니다.
4. **파일 요약**: 각 유효 파일의 내용을 읽고, LLM(Large Language Model)을 사용하여 파일의 역할과 로직을 요약합니다.
5. **전체 레포지토리 요약**: 각 파일의 요약을 결합하여 전체 레포지토리의 맥락을 요약합니다.

#### 주요 함수
- `is_valid_source_file(path: Path) -> bool`: 파일이 유효한 소스 파일인지 확인합니다.
- `get_repo_name() -> str`: Git 레포지토리의 이름을 가져옵니다.
- `get_folder_structure_with_status(valid_files: list[Path]) -> str`: 유효 파일들의 폴더 구조를 트리 형태로 생성합니다.
- `get_readme_content() -> str`: `README.md` 파일의 내용을 읽습니다.
- `list_all_repo_files() -> list[Path]`: 레포지토리 내 모든 파일을 나열합니다.
- `build_context(log, timestamp: str, llm_file_cfg: dict, llm_repo_cfg: dict)`: 레포지토리의 전체 맥락을 분석하고 요약합니다.

#### 설계 철학
이 파일은 Git 레포지토리의 복잡한 구조와 내용을 이해하고 요약하는 데 중점을 둡니다. 이를 위해 LLM을 활용하여 각 파일의 역할과 전체 레포지토리의 맥락을 분석합니다. 이는 기술 문서 작성, 커밋 메시지 생성, 그리고 미래의 작업자를 위한 구조적 설명을 제공하는 데 유용합니다.

### 전체 레포지토리 요약 요청

#### 요청 사항
1. **이 Repo의 제작 목적**: 이 레포지토리는 자동화된 Git 작업을 위한 스크립트와 구성 파일을 포함하고 있습니다. 주요 목적은 VSCode가 꺼질 때 자동으로 실행되는 작업을 설정하는 것입니다.
   
2. **이 Repo의 주요 기능**: 
   - 자동 실행 설정: Windows 작업 스케줄러를 사용하여 VSCode가 꺼질 때 자동으로 스크립트를 실행합니다.
   - 파일 요약 및 전체 레포지토리 맥락 분석: LLM을 사용하여 각 파일의 역할과 전체 레포지토리의 구조를 분석하고 요약합니다.

3. **전체 구성 구조**:
   ```
   git_auto_v2/
   ├── check_err.py
   │   ├── 다양한 통합 모듈 (gpt-4o.py, discord.py, gmail.py 등)
   ├── run_all.py
   │   ├── 자동화 관련 스크립트 (auto_git.sh, classify.py, commit.py 등)
   ```

4. **폴더별 책임**:
   - 루트 디렉토리: 주요 스크립트 및 설정 파일 포함
   - `check_err.py` 디렉토리: 다양한 외부 서비스와의 통합을 위한 모듈 포함
   - `run_all.py` 디렉토리: 자동화 작업을 위한 스크립트 포함

5. **주요 파일 및 핵심 로직**:
   - `scripts/context.py`: 레포지토리의 전체 맥락을 분석하고 요약하는 주요 로직을 포함
   - `auto_git.sh`: 자동 실행을 위한 쉘 스크립트
   - `README.md`: 레포지토리의 설정 및 사용 방법을 설명

6. **설계 철학이나 아키텍처 특징**:
   - 자동화: Windows 작업 스케줄러를 사용하여 자동으로 스크립트를 실행
   - 모듈화: 다양한 기능을 모듈화하여 유지보수성을 높임
   - LLM 활용: 대규모 언어 모델을 활용하여 레포지토리의 맥락을 분석하고 요약

이 레포지토리는 자동화된 Git 작업과 레포지토리 분석을 위한 구조화된 접근 방식을 제공합니다.