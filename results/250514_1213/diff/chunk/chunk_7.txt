@@ -59,22 +53,23 @@ def generate_commit_and_record(
             log(f"❌ 커밋 청크 메시지 생성 실패: {e}")
             commit_msgs.append("[ERROR] 메시지 실패")
 
-    # ────────────────────────────────
-    # 🔹 최종 커밋 메시지 생성
-    # ────────────────────────────────
-    d = f"""
-당신은 팀 프로젝트의 PR 메시지를 작성하는 전문가입니다.
+    # 최종 커밋 메시지
+    d = f"""당신은 팀 프로젝트의 PR 메시지를 작성하는 전문가입니다.
 아래는 레포의 전체 맥락과, chunk별로 생성된 커밋 메시지들입니다.
 
-🧱 Repo context:
+[Repo context]
 {repo_context}
 
-🧩 개별 commit 메시지들:
+[개별 commit 메시지들]
 {chr(10).join(commit_msgs)}
 
 {final_commit_txt}
 """
-    prompt_vars["d"] = d
+    prompt_vars["d"] = {
+        "text": d,
+        "model": llm_cfg_final["model"][0],
+        "purpose": "commit_final"
+    }
 
     try:
         final_commit = call_llm(d, llm_cfg_final)
@@ -82,24 +77,21 @@ def generate_commit_and_record(
         final_commit = "[ERROR] 최종 커밋 메시지 실패"
         log(f"❌ 최종 커밋 메시지 실패: {e}")
 
-    # ────────────────────────────────
-    # 🔹 기록용 메시지 생성 (doc_writing)
-    # ────────────────────────────────
+    # 기록용 메시지
     combined_diff = "\n\n".join(diff_chunks)
-
-    e = f"""
-다음은 Git 레포의 전체 맥락 요약과 전체 변경된 diff 내용입니다.
-이 프로젝트의 의도, 수정의 맥락, 기술적 고민을 담아 기술 문서용으로 기록해주세요.
-
-🧱 Repo context:
+    e = f"""[Repo context]
 {repo_context}
 
-🧩 전체 diff:
+[전체 diff]
 {combined_diff}
 
 {record_prompt_txt}
 """
-    prompt_vars["e"] = e
+    prompt_vars["e"] = {
+        "text": e,
+        "model": llm_cfg_record["model"][0],
+        "purpose": "record"
+    }
 
     try:
         record_msg = call_llm(e, llm_cfg_record)
diff --git a/scripts/run_all.py b/scripts/run_all.py
index 2e93557..685584f 100644
--- a/scripts/run_all.py
+++ b/scripts/run_all.py
@@ -1,8 +1,9 @@
-import time
+import time, json, sys, shutil
 from datetime import datetime
-import json
 from pathlib import Path
-import shutil
+from pathlib import Path
+
+sys.path.append(str(Path(__file__).resolve().parent.parent))
 
 from scripts.context import build_context
 from scripts.diff import get_git_diff, split_diff_by_function